#--------------------------------------------------------------------- #
# Global settings
#---------------------------------------------------------------------
global
 # setup logging and force level to debug. Logs require rsyslog be setup.
 log /dev/log local0 debug
 # maximum number of connections allowed
 maxconn 10000
 # turn on stats unix socket
 stats timeout 30s



#---------------------------------------------------------------------
#HAProxy Monitoring Config
#---------------------------------------------------------------------
listen mon11
 bind 0.0.0.0:1936
 mode http
 option forwardfor
 option httpclose
 stats enable
 stats uri /
 stats refresh 5s
 stats show-legends
 stats realm Haproxy\ Statistics
 stats auth amartinez:hola123  # Authentication credentials
 stats admin if TRUE


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
 default-server init-addr last,libc,none
 log global
 mode http
 stats show-legends
 option httplog
 option redispatch
 option forwardfor
 timeout connect 10s
 timeout client 60s
 timeout server 60s
 timeout tunnel 1h

# haproxy.cfg
frontend http
    bind *:8100
    mode http
    timeout client 10s
    use_backend all

# -----------------------------------------------------------------------
#  En la configuracion de nuestros servidores backend, se agrego la configuracion/opcion (option httpchk)
#  Por defecto, las comprobaciones del estado del servidor consisten únicamente en intentar establecer una
#  conexión TCP. Cuando se especifica la opción "httpchk", se envía una solicitud HTTP completa
#  una vez establecida la conexión TCP y las respuestas 2xx y 3xx se consideran válidas, mientras que todas las demás indican un fallo del servidor, incluida
#  la falta de respuesta.
#  en ete caso definimos como el HTTP CODE 404 como un codigo valido, si el servidor responde 404, quiere decir que esta arriba el servidor, esto solo es una simulación
#  se puede modificar posteriormente.
# -----------------------------------------------------------------------

backend all
    mode http
    option httpchk
    http-check send meth GET uri /health
    http-check expect status 404
    server s1 app1:8081 check
    server s2 app2:8082 check
    server s3 app3:8083 check
